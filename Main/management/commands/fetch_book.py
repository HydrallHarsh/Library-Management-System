# Main/management/commands/fetch_book.py
import requests
from django.core.management.base import BaseCommand
from Main.models import Book
from datetime import datetime

class Command(BaseCommand):
    help = 'Fetch book data from Google Books API'

    def handle(self, *args, **kwargs):
        # List of ISBN codes
        isbn_list = [
    "9783161484100", "9780262034887", "9780143127550", "9781402894626", "9780394523497",
    "9780743273565", "9780307591701", "9781593275846", "9780061122415", "9780345342962",
    "9781501136815", "9780525536602", "9781400075955", "9781501123235", "9780399158415",
    "9780743273541", "9780062024039", "9781250067506", "9780385741409", "9781451681411",
    "9780743273534", "9781476767619", "9780143106272", "9780385517085", "9780062457714",
    "9780375504206", "9780307956784", "9780062255654", "9780307740281", "9780143127550",
    "9780062356206", "9781476787205", "9780307701435", "9781476877373", "9780062498538",
    "9781400075924", "9780385746783", "9781476795752", "9780307957330", "9780385541570",
    "9781250078857", "9781476798173", "9780062656333", "9780385752151", "9780062571994",
    "9781501168717", "9781476797848", "9780451493046", "9780062497104", "9781476788888",
    "9781250077706", "9780385752168", "9780062356206", "9780307745554", "9780062672111",
    "9780307475506", "9780385746776", "9780062457714", "9781476798449", "9781250007131",
    "9780385746783", "9780062656333", "9781476877458", "9780062571994", "9780307701442",
    "9780307745554", "9780062498538", "9780062672111", "9780307743284", "9781476798760",
    "9780451493053", "9780062571994", "9780307472086", "9780062571994", "9780307472086",
    "9781476877373", "9780385541570", "9780451493060", "9781250077706", "9780307956784",
    "9781476787205", "9780307745554", "9781476797848", "9781476798173", "9780307745554",
    "9781476788888", "9781476877676", "9781250007131", "9780307701435", "9780307740281",
    "9781476798173", "9780307701442", "9781250007131", "9780307745554", "9781476877676",
    "9780307745554", "9781476798173", "9780307743284", "9780307745554", "9781476877373",
    "9780307947762", "9780143127550", "9780451493053", "9781250077706", "9780307743284",
    "9781250077706", "9781250077706", "9780143127550", "9781476797848", "9780307745554",
    "9781476788888", "9781250077706", "9780307745554", "9781476797848", "9780143127550",
    "9780307745554", "9780307745554", "9781476877373", "9780307745554", "9781250077706",
    "9780307745554", "9781250077706", "9780307743284", "9781250077706", "9780307743284",
    "9780143127550", "9780307745554", "9781476797848", "9780143127550", "9781476797848",
    "9780143127550", "9780307745554", "9781476797848", "9780143127550", "9780307745554",
    "9780143127550", "9780143127550", "9780307743284", "9780143127550", "9780307743284",
    "9780143127550", "9780307745554", "9780307745554", "9780307745554", "9780143127550",
    "9780307745554", "9780143127550", "9780143127550", "9780143127550", "9780307743284",
    "9780143127550", "9780143127550", "9780143127550", "9780307743284", "9780143127550",
    "9780143127550", "9780143127550", "9780307743284", "9780143127550", "9780143127550",
    "9780143127550", "9780143127550", "9780143127550", "9780143127550", "9780143127550",
    "9780143127550", "9780143127550", "9780143127550", "9780143127550", "9780143127550",
    "9780143127550", "9780143127550", "9780143127550", "9780143127550", "9780143127550"]
        
        for isbn in isbn_list:
            self.fetch_and_save_book_data(isbn)

    def fetch_and_save_book_data(self, isbn):
        url = f'https://www.googleapis.com/books/v1/volumes?q=isbn:{isbn}'
        response = requests.get(url)
        if response.status_code == 200:
            data = response.json()
            if 'items' in data:
                volume_info = data['items'][0]['volumeInfo']
                published_date = volume_info.get('publishedDate', '0000-00-00')
                try:
                    published_date = datetime.strptime(published_date, '%Y-%m-%d').date()
                except ValueError:
                    published_date = None

                book, created = Book.objects.update_or_create(
                    isbn_13=volume_info['industryIdentifiers'][0]['identifier'],
                    defaults={
                        'title': volume_info.get('title', ''),
                        'authors': ', '.join(volume_info.get('authors', [])),
                        'publisher': volume_info.get('publisher', ''),
                        'published_date': published_date,
                        'description': volume_info.get('description', ''),
                        'page_count': volume_info.get('pageCount', 0),
                        'thumbnail_url': volume_info['imageLinks'].get('thumbnail', '') if 'imageLinks' in volume_info else ''
                    }
                )
                if created:
                    self.stdout.write(self.style.SUCCESS(f'Successfully created book "{book.title}"'))
                else:
                    self.stdout.write(self.style.SUCCESS(f'Successfully updated book "{book.title}"'))
            else:
                self.stdout.write(self.style.ERROR(f'No items found for ISBN: {isbn}'))
        else:
            self.stdout.write(self.style.ERROR(f'Failed to fetch data for ISBN: {isbn}'))
